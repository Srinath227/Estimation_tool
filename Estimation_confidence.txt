Estimation_confidence


import json

def calculate_adj_hrs(est_factor,dev):
    adj_hrs= float(dev)/(1-float(est_factor))
    return round(adj_hrs)
    
def lambda_handler(event, context):
   
    try:
        scale=event["queryStringParameters"]["confidence_scale"]
        dev=event["queryStringParameters"]["dev_hrs"]
        
        my_dict= {10: 0, 9: 0.1, 8: 0.2, 7: 0.3, 6: 0.4, 5: 0.5, 4: 0.6, 3: 0.7, 2: 0.8, 1: 0.9, 0: 1}
        get_value= lambda key: my_dict[key]
        est_factor= get_value(float(scale))
        result= calculate_adj_hrs(est_factor,dev)
        
        response={
            'statusCode': 200,
            "body": json.dumps(result),
            "headers": {
                        'ContentType': 'application/json',
                        'Access-Control-Allow-Origin': '*'
                        }

        }
    except Exception as e:
        response = {
          "statusCode": 500,
          "body": json.dumps(str(e)),
          "headers": {
                        'ContentType': 'application/json',
                        'Access-Control-Allow-Origin': '*'
        
           }
        }
    return response

